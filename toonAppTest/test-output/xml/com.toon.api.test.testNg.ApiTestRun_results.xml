<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="toonApp_api测试"
           tests="2"
           failures="1"
           errors="0"
           skipped="0"
           time="1.036">
  <properties />
            <testcase name="testUser" time="0.941" classname="com.toon.api.test.testNg.ApiTestRun">
                <failure type="java.lang.AssertionError"
                  message="接口请求为：{&quot;authKey&quot;:{&quot;appVersion&quot;:&quot;3&quot;,&quot;deviceId&quot;:&quot;863637027549371&quot;,&quot;platform&quot;:&quot;android&quot;,&quot;platformVersion&quot;:&quot;19&quot;},&quot;bizKey&quot;:&quot;{\&quot;deviceToken\&quot;:\&quot;863637027549371\&quot;,\&quot;loginType\&quot;:\&quot;2\&quot;,\&quot;mobile\&quot;:\&quot;13581535754\&quot;,\&quot;password\&quot;:\&quot;111112\&quot;,\&quot;uuid\&quot;:\&quot;863637027549371\&quot;}&quot;}
接口返回为：{&quot;result&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;status&quot;:&quot;2&quot;,&quot;userId&quot;:&quot;0&quot;,&quot;buildCard&quot;:&quot;1&quot;,&quot;loginErrorTimes&quot;:&quot;3&quot;,&quot;userTopic&quot;:&quot;s_0&quot;},&quot;code&quot;:&quot;0&quot;} 
接口预期为：.*&quot;status&quot;: &quot;0&quot;.* expected:&lt;true&gt; but was:&lt;false&gt;"
              >
<![CDATA[java.lang.AssertionError: 接口请求为：{"authKey":{"appVersion":"3","deviceId":"863637027549371","platform":"android","platformVersion":"19"},"bizKey":"{\"deviceToken\":\"863637027549371\",\"loginType\":\"2\",\"mobile\":\"13581535754\",\"password\":\"111112\",\"uuid\":\"863637027549371\"}"}
接口返回为：{"result":"success","data":{"status":"2","userId":"0","buildCard":"1","loginErrorTimes":"3","userTopic":"s_0"},"code":"0"} 
接口预期为：.*"status": "0".* expected:<true> but was:<false>
  org.testng.Assert.fail(Assert.java:89)
  org.testng.Assert.failNotEquals(Assert.java:489)
  org.testng.Assert.assertEquals(Assert.java:118)
  org.testng.Assert.assertEquals(Assert.java:281)
  util.StringUtil.AssertByRegEx(StringUtil.java:66)
  com.toon.api.test.testNg.ApiTestRun.testUser(ApiTestRun.java:19)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:601)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:701)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:893)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1218)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
  org.testng.TestRunner.privateRun(TestRunner.java:758)
  org.testng.TestRunner.run(TestRunner.java:613)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
  org.testng.SuiteRunner.run(SuiteRunner.java:240)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:87)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1170)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1095)
  org.testng.TestNG.run(TestNG.java:1007)
  org.testng.TestNG.privateMain(TestNG.java:1315)
  org.testng.TestNG.main(TestNG.java:1279)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="testUser" time="0.095" classname="com.toon.api.test.testNg.ApiTestRun" />
      
</testsuite>
