<?xml version="1.0" encoding="UTF-8"?>

	<project basedir="." default="smoke" name="automation test">
	<property name="base.dir" value="." />
	<property name="testng.output.dir" value="${base.dir}/test-output" />
	<property name="testng.report.dir" value="${base.dir}/test-report" />
	<property name="3rd.lib.dir" value="${base.dir}/lib" />
	<property name="testng.toonApp" value="suite/toonApp_api.xml" />
	<property name="classes.dir" value="classes" />
	<property name="test_jar" value="test.jar"/>
	<path id="master-classpath">
		<fileset file="${3rd.lib.dir}/*.jar" />
		<pathelement path="${classes.dir}" />
	</path>
	<taskdef resource="testngtasks" classpath="${3rd.lib.dir}/testng-6.4.jar" />
    
	<!-- clean -->
	<target name="clean">
	 <delete dir="${classes.dir}" />
	</target>

	<!-- compile -->
	<target name="compile" depends="clean">
		<mkdir dir="${classes.dir}" /> 
		<javac srcdir="${base.dir}/src" destdir="${classes.dir}" classpathref="classes" includeantruntime="off" debug="on" debuglevel="lines,vars,source" >
			<compilerarg line="-encoding gbk "/>  
			<classpath refid="master-classpath" />
		</javac>
		       
       <copy todir="${classes.dir}">
       	 
    		<fileset dir="${basedir}/src">
    		    <exclude name="**/.svn"/>
    		   	<exclude name="**/*.java"/>
    		</fileset>   
    	</copy>
	</target>
	
	<path id="classes">
		<fileset dir="${3rd.lib.dir}" includes="*jar" />
		<fileset dir="${3rd.lib.dir}" includes="*zip" />
		<pathelement location="${classes.dir}" />
	</path>

	<!-- run -->
	<target name="smoke" depends="compile">
	<!-- 用ReportNg替换TestNg默认的报告生成工具
		useDefaultListeners = "false" 用来禁止TestNg产生报告,但是我们还需要他的错误报告testng-fails.xml文件，为了方便我们只关注未通过的测试，所以还要将TestNg的org.testng.reporters.FailedReporter监听器加上。
 		注：org.uncommons.reportng.HTMLReporter为reportNg的报告监听器 -->
 		
 	  
	<!-- <testng outputdir="${testng.output.dir}" classpathref="classes" delegateCommandSystemProperties="true" useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter"> -->
		<testng outputdir="${testng.output.dir}" classpathref="classes"   haltOnfailure="false"  useDefaultListeners="false" listeners="org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter" > 
			 <jvmarg value="-Dfile.encoding=GBK"/> 
		
			<!--设置TestNg所包含的xml文件--> 
			<xmlfileset dir="${base.dir}" includes="${testng.toonApp}" />
			<sysproperty key="file.encoding" value="utf-8" />  
	        <!--设置报告Title名称 -->  
	        <sysproperty key="org.uncommons.reportng.title" value="toonApp接口自动化测试报告" />  
		</testng>
	
    <!--
		<echo>Some of these tests should have failed, see the file test.out for the details</echo>
		
		<junitreport  todir="${testng.report.dir}">
			<fileset dir="${testng.output.dir}">
				<include name="*.xml"/>
			</fileset>
			<report format="noframes" todir="${testng.report.dir}"/>
		</junitreport>
     -->
	</target>


	<!-- backup -->
	<target name = "backup result" depends="smoke">
		<copy />	
	</target>
	
	<!-- report -->
	 
		<target name="report" depends="smoke" description ="generate reports using junireport">
			<junitreport  todir="${testng.report.dir}">
			<fileset dir="${testng.output.dir}">
				<include name="*.xml"/>
			</fileset>
			<report format="noframes" todir="${testng.report.dir}"/>
				<sysproperty key="file.encoding" value="utf-8" />
			</junitreport >
		</target>
			
	
	</project>